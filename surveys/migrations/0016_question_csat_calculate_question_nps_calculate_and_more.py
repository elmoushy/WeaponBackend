# Generated by Django 5.2.4 on 2025-10-23 16:34

import django.db.models.deletion
import surveys.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0015_surveytemplate_templatequestion_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='question',
            name='CSAT_Calculate',
            field=models.BooleanField(db_index=True, default=False, help_text='Indicates if this question is used for CSAT calculation (only valid for single_choice, rating, yes_no)'),
        ),
        migrations.AddField(
            model_name='question',
            name='NPS_Calculate',
            field=models.BooleanField(db_index=True, default=False, help_text='Indicates if this question is used for NPS calculation (only valid for rating questions)'),
        ),
        migrations.AddField(
            model_name='question',
            name='max_scale',
            field=models.IntegerField(blank=True, default=5, help_text='Maximum value for rating scale (default 5 for NPS, auto-detect for CSAT)', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='min_scale',
            field=models.IntegerField(blank=True, default=0, help_text='Minimum value for rating scale (default 0 for NPS, auto-detect for CSAT)', null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='semantic_tag',
            field=models.CharField(choices=[('none', 'None'), ('nps', 'NPS'), ('csat', 'CSAT')], db_index=True, default='none', help_text='Semantic tag for analytics optimization (fallback if Calculate flags not set)', max_length=20),
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option_text', surveys.models.EncryptedCharField(help_text='Option text (encrypted, must match text in question.options JSON)', max_length=255)),
                ('option_text_hash', models.CharField(blank=True, db_index=True, help_text='SHA256 hash of option text for efficient matching', max_length=64)),
                ('satisfaction_value', models.IntegerField(blank=True, choices=[(2, 'Satisfied'), (1, 'Neutral'), (0, 'Dissatisfied')], db_index=True, help_text='CSAT satisfaction mapping for single choice options (required when question.CSAT_Calculate=True)', null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_mappings', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Question Option',
                'verbose_name_plural': 'Question Options',
                'db_table': 'surveys_question_option',
                'ordering': ['question', 'order'],
                'indexes': [models.Index(fields=['option_text_hash'], name='option_text_hash_idx'), models.Index(fields=['satisfaction_value'], name='option_satisfaction_idx')],
                'constraints': [models.UniqueConstraint(fields=('question', 'option_text_hash'), name='unique_question_option_hash')],
            },
        ),
    ]
